풀스택 프레임워크 (Full-stack Framework)

- 올인원 솔루션
- 프론트엔드 UI 백엔드 로직, 데이터베이스와의 소통까지 모두 지원함
- 어플리케이션을 빌드하는데 필요한 모든 것을 제공하기에 가장 대중적임

마이크로프레임워크(Micro-framework)

- 풀스택프레임워크가 아닌 프레임워크
- 풀스택프레임워크만큼의 기능을 제공하지 않고 핵심적인 기능만을 제공함(부가적인 기능은 추가해야함)
- 개발자에게 요구되는 의사결정이 단순

비동기적 프레임워크 (Asychronous Framework)

- asyncio 라이브러리 3.5 버전이 배포된 이후로 인기를 얻게 된 프레임워크 
- 대규모의 동시접속을 다루는데 용이함
- 네트워크, 웹서버, 접속 라이브러리, 데이터베이스 등에서 높은 수준의 퍼포먼스를 제공

1. 장고(Django)
* M : 모델, 테이블 정의 / T : 템플릿, 사용자가 보게 될 화면 정의 /  V : 뷰, 어플리케이션의 제어흐름과 처리로직의 정의
 - 파이썬으로 작성된 오픈소스 웹어플리케이션으로 MTV프레임워크 모드가 적용되어 있다. 
 - ORM(Object Relational Mapping, 객체관계매핑)을 지원하고 데이터베이스 운영을 
   파이썬으로 할 수 있다.
 - 크고 복잡한 프로젝트에 적합한 파이썬 웹 프레임워크로 작은 프로젝트에는 오히려 기능이 과할 수 있다.

2. 피라미드(Pyramid)

 - 기능이 풍성함, 파이썬과 같은 대중적인 프로그래밍 언어를 사용한 웹개발 어디서든 활용 가능
 - 유연하고, 확장 가능성이 높고, 테스트 용이하며  모듈 구조이다. 
 - BSD(Berkeley Software Distribution)와 같은 라이선스를 사용하는 작고 가볍게 시작해볼 수 있는 WSGI 파이썬 프레임워크이다. 
 - 활발하게 활동중인 커뮤니티가 존재하고 공식문서가 풍성하다
 - 어플리케이션에 크기와 상관없이 가장 빠르게 구현할 수 있는 파이썬 웹 프레임워크이다.

3. 체리파이(Cherry Py)

 - 다양한 종류의 웹어플리케이션의 토대를 쌓는데 탁월한 파이썬 프레임워크
 - 배우고 사용하기 쉽게 디자인되어 있다. 
 - 가장 접근하기 쉬운 프레임워크
 - 다른사람이나 서비스에 의존하지 않고 코드를 실행해볼 수 있으며 체리파이 내 컴포넌트로 어플리케이션을 쉽게 배포할 수 있다.



https://mokeya.tistory.com/109




